openapi: 3.0.0
info:
  title: GitHub Full Access API
  description: API для полного доступа к GitHub аккаунту, включая приватные репозитории и создание файлов.
  version: 1.0.0
servers:
  - url: https://api.github.com
    description: GitHub API
paths:
  /user/repos:
    get:
      operationId: listUserRepos
      summary: Список репозиториев пользователя
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Список репозиториев
          content:
            application/json:
              schema: 
                type: array
                items: 
                  $ref: '#/components/schemas/Repository'
    post:
      operationId: createUserRepo
      summary: Создание репозитория пользователя
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RepositoryCreate'
      responses:
        '201':
          description: Репозиторий создан
  /repos/{owner}/{repo}:
    delete:
      operationId: deleteRepository
      summary: Удаление репозитория
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Репозиторий удален
    patch:
      operationId: updateRepository
      summary: Обновление параметров репозитория
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                description:
                  type: string
                private:
                  type: boolean
                has_issues:
                  type: boolean
                has_projects:
                  type: boolean
                has_wiki:
                  type: boolean
      responses:
        '200':
          description: Репозиторий обновлен
  /repos/{owner}/{repo}/git/refs:
    get:
      operationId: listRepoBranches
      summary: Список веток репозитория
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Список веток
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Branch'
  /repos/{owner}/{repo}/issues:
    get:
      operationId: listRepoIssues
      summary: Список issues репозитория
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Список issues
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Issue'
    post:
      operationId: createRepoIssue
      summary: Создание issue в репозитории
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IssueCreate'
      responses:
        '201':
          description: Issue создан
  /repos/{owner}/{repo}/pulls:
    get:
      operationId: listRepoPullRequests
      summary: Список pull requests репозитория
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Список pull requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PullRequest'
    post:
      operationId: createRepoPullRequest
      summary: Создание pull request в репозитории
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PullRequestCreate'
      responses:
        '201':
          description: Pull request создан
  /repos/{owner}/{repo}/contents/{path}:
    put:
      operationId: createOrUpdateFileOrDirectory
      summary: Создание или обновление файла, или создание каталога
      description: >
        Создает новый файл или обновляет существующий по указанному пути.
        Для создания каталога, добавьте файл в желаемый каталог (например, указав путь 'new_directory/new_file.txt').
        Пустой файл можно использовать для инициализации каталога.
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: path
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                message:
                  type: string
                content:
                  type: string
                  description: Содержимое файла в кодировке Base64. Для создания каталога, укажите содержимое для файла в этом каталоге.
                branch:
                  type: string
                  description: Имя ветки, в которой будет создан файл. Если ветка не указана, используется ветка по умолчанию.
      responses:
        '201':
          description: Файл или каталог создан
        '404':
          description: Репозиторий не найден
  /repos/{owner}/{repo}/issues/{issue_number}:
    patch:
      operationId: updateIssue
      summary: Обновление issue
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: issue_number
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                body:
                  type: string
                state:
                  type: string
                labels:
                  type: array
                  items:
                    type: string
                assignees:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Issue обновлено
  /repos/{owner}/{repo}/collaborators/{username}:
    put:
      operationId: addCollaborator
      summary: Добавление коллаборатора в репозиторий
      security:
        - BearerAuth: []
      parameters:
        - name: owner
          in: path
          required: true
          schema:
            type: string
        - name: repo
          in: path
          required: true
          schema:
            type: string
        - name: username
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                permission:
                  type: string
                  enum: [pull, push, admin]
      responses:
        '201':
          description: Коллаборатор добавлен


components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Repository:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        private:
          type: boolean
    RepositoryCreate:
      type: object
      properties:
        name:
          type: string
        description:
          type: string
        private:
          type: boolean
        auto_init:
          type: boolean
          description: Whether the repository is initialized with a README
    Branch:
      type: object
      properties:
        name:
          type: string
    Issue:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        state:
          type: string
    IssueCreate:
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        assignees:
          type: array
          items:
            type: string
    PullRequest:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        body:
          type: string
        state:
          type: string
    PullRequestCreate:
      type: object
      properties:
        title:
          type: string
        head:
          type: string
        base:
          type: string
        body:
          type: string
